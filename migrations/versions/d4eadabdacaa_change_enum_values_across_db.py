"""change enum values across db

Revision ID: d4eadabdacaa
Revises: 265c8ec51a2b
Create Date: 2024-02-01 13:47:07.580774

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'd4eadabdacaa'
down_revision: Union[str, None] = '265c8ec51a2b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('question_paper', 'board',
               existing_type=mysql.ENUM('IGCSE', 'ICSE', 'CBSE', 'IB'),
               type_=sa.Enum('IGCSE', 'ICSE', 'CBSE', 'International', name='board'),
               existing_nullable=False)
    op.alter_column('user_question_paper', 'tone',
               existing_type=mysql.ENUM('FORMAL', 'CASUAL', 'GENZ', 'HUMOROUS'),
               type_=sa.Enum('Formal', 'Casual', 'Gen-Z', 'Humorous', name='tone'),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user_question_paper', 'feedback_length',
               existing_type=sa.Enum('Elaborate', 'Concise', 'No', name='feedbacklength'),
               type_=mysql.ENUM('No', 'Concise', 'Elaborate'),
               existing_nullable=False)
    op.alter_column('user_question_paper', 'tone',
               existing_type=sa.Enum('Formal', 'Casual', 'Gen-Z', 'Humorous', name='tone'),
               type_=mysql.ENUM('FORMAL', 'CASUAL', 'GENZ', 'HUMOROUS'),
               existing_nullable=False)
    # ### end Alembic commands ###
